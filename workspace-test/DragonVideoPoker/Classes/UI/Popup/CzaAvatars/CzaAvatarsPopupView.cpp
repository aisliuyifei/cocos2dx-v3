/**
* This file is auto generated by Twin Dragons Tools
* CzaAvatarsPopupView.cpp
* DragonVideoPoker
*
* Created by apple on Mon Sep 22 23:42:59 GMT+07:00 2014
*
**/
#include "CzaAvatarsPopupView.h"
#include "PopUpLayer.h"
#include "ITableCellView.h"
#include "TableView.h"
#include "VisibleRect.h"
#include "GameParams.h"
#include "UseMenuItemView.h"

/**
* This file is auto generated by Twin Dragons Tools
* CzaAvatarsPopupCellView.cpp
* DragonVideoPoker
*
* Created by apple on Mon Sep 22 23:42:59 GMT+07:00 2014
*
**/
class CzaAvatarsPopupCellView : public ITableCellView {
public:
	static CzaAvatarsPopupCellView* create(//{parameters},
							const int &idx);
	virtual bool init(//{parameters},
					const int &idx = 0);
	virtual void update(const int &idx);
protected:
	virtual void addSprites();
    virtual void addLabels();
    virtual void addMenus();
    virtual void addMenuItems();
    
    virtual void updateSprites(const int &idx);
    virtual void updateLabels(const int &idx);
    virtual void updateMenuItems(const int &idx);
private:
	enum ElementTag {
		
		usemenuTag = 1,

		usemenuitemTag = 1,

		czaFacebookIconspriteTag = 1,
		czaInframespriteTag = 2,
		czaSelectedspriteTag = 3,
		czaUseBackgroundspriteTag = 4,

		czaCurrentBackgroundspriteTag = 5,
		czaCurrentBackgroundspriteTag1 = 6,
		czaCurrentBackgroundspriteTag2 = 7,

	};
	void czaAvatarsPopupMenuItemCallback(CCObject *pSender);
	
	CCSprite* mCzaFacebookIconSprite;
	CCSprite* mCzaInframeSprite;
	CCSprite* mCzaSelectedSprite;
	CCSprite* mCzaUseBackgroundSprite;

	CCSprite* mCzaCurrentBackgroundSprites[3];

	CCMenuItem* mUseMenuItem;

	CCMenu* mUseMenu;

	//{extend_functions_declaring}
};

CzaAvatarsPopupCellView* CzaAvatarsPopupCellView::create(//{parameters},
										const int &idx) {
    CzaAvatarsPopupCellView* pRet = new CzaAvatarsPopupCellView();
    pRet->autorelease();
    pRet->init(//{importing_params},
    		idx);
    
    return pRet;
}

bool CzaAvatarsPopupCellView::init(//{parameters},
							const int &idx) {             
	
    return ITableCellView::init(idx);
}

void CzaAvatarsPopupCellView::addMenus() {
	ITableCellView::addMenus();
    
}

void CzaAvatarsPopupCellView::addMenuItems() {
    ITableCellView::addMenuItems();
    
}

void CzaAvatarsPopupCellView::addSprites() {
	ITableCellView::addSprites();
   
   		//create group of sprites
	for(int i = 0 ; i < 3 ; i++) {
	
		mCzaCurrentBackgroundSprites[i] = 
			CCSprite::create(D::id.cza_avatars_popup_container_cell_cza_current_background_cza_current_background.c_str());
		mCzaCurrentBackgroundSprites[i]->setPosition(GPARAMS().POPUP_CZA_AVATARS_CZA_CURRENT_BACKGROUND_SPRITE_POSITIONS[i]);
		this->addChild(mCzaCurrentBackgroundSprites[i], 0);
	
		//create group of sprites
		mCzaFacebookIconSprite = 
			CCSprite::create(D::id.cza_avatars_popup_container_cell_cza_current_background_cza_facebook_icon.c_str());
		mCzaFacebookIconSprite->setPosition(GPARAMS().POPUP_CZA_AVATARS_CZA_FACEBOOK_ICON_SPRITE_POSITION);
		mCzaCurrentBackgroundSprites[i]->addChild(mCzaFacebookIconSprite, 0);
	
		mCzaInframeSprite = 
			CCSprite::create(D::id.cza_avatars_popup_container_cell_cza_current_background_cza_inframe.c_str());
		mCzaInframeSprite->setPosition(GPARAMS().POPUP_CZA_AVATARS_CZA_INFRAME_SPRITE_POSITION);
		mCzaCurrentBackgroundSprites[i]->addChild(mCzaInframeSprite, 0);
	
		mCzaSelectedSprite = 
			CCSprite::create(D::id.cza_avatars_popup_container_cell_cza_current_background_cza_selected.c_str());
		mCzaSelectedSprite->setPosition(GPARAMS().POPUP_CZA_AVATARS_CZA_SELECTED_SPRITE_POSITION);
		mCzaCurrentBackgroundSprites[i]->addChild(mCzaSelectedSprite, 0);
	
		mCzaUseBackgroundSprite = 
			CCSprite::create(D::id.cza_avatars_popup_container_cell_cza_current_background_cza_use_background.c_str());
		mCzaUseBackgroundSprite->setPosition(GPARAMS().POPUP_CZA_AVATARS_CZA_USE_BACKGROUND_SPRITE_POSITION);
		mCzaCurrentBackgroundSprites[i]->addChild(mCzaUseBackgroundSprite, 0);
	
		//create group of menus
		mUseMenu = CCMenu::create();
		mUseMenu->setAnchorPoint(CCPoint(0, 0));
		mUseMenu->setPosition(CCPoint(0, 0));
		mCzaCurrentBackgroundSprites[i]->addChild(mUseMenu);
	
		//create group of menuitems
		mUseMenuItem = UseMenuItemView::create(0,
							"dung",
							this,
							menu_selector(CzaAvatarsPopupCellView::czaAvatarsPopupMenuItemCallback));
		mUseMenuItem->setPosition(GPARAMS().POPUP_CZA_AVATARS_USE_MENUITEM_POSITION);
		mUseMenu->addChild(mUseMenuItem, 0, usemenuitemTag);
	}

}

void CzaAvatarsPopupCellView::addLabels() {
	ITableCellView::addLabels();	
   
}

void CzaAvatarsPopupCellView::updateSprites(const int &idx) {
	ITableCellView::updateSprites(idx);
	
	//{update_sprites}
}

void CzaAvatarsPopupCellView::updateLabels(const int &idx) {
	ITableCellView::updateLabels(idx);
	
	//{update_labels}
}

void CzaAvatarsPopupCellView::updateMenuItems(const int &idx) {
	ITableCellView::updateMenuItems(idx);
	
	//{update_menuitems}
}

void CzaAvatarsPopupCellView::update(const int &idx) {
	ITableCellView::update(idx);
	
	//{update_cell_view}
}

//{extend_functions_implementing}

void CzaAvatarsPopupCellView::czaAvatarsPopupMenuItemCallback(CCObject *pSender) {
    
    CCMenuItem* menuItem = static_cast<CCMenuItem*>(pSender);
        
    switch (menuItem->getTag()) {
        //{menuitem_cases}
    }
}


CzaAvatarsPopupView* CzaAvatarsPopupView::create(//{parameters},
							string pBackgroundImage,
							string pExitNormalImage,
							string pExitSelectedImage) {
    CzaAvatarsPopupView* pRet = new CzaAvatarsPopupView();
    pRet->autorelease();
    pRet->init(//{importing_params}
    		pBackgroundImage, 
    		pExitNormalImage, 
    		pExitSelectedImage);
    
    return pRet;
}

bool CzaAvatarsPopupView::init(//{parameters},
							string pBackgroundImage,
							string pExitNormalImage,
                            string pExitSelectedImage) {             
	
    PopUpLayer::init(pBackgroundImage,
                     pExitNormalImage,
                     pExitSelectedImage,
                     GPARAMS().POPUP_CZA_AVATARS_POP_COMMON_CLOSE_NORMAL_SPRITE_POSITION
                     );
    setBackgroundPosition(VisibleRect::center());
    
    return true;
}

void CzaAvatarsPopupView::addMenus() {
	PopUpLayer::addMenus();
    
}

void CzaAvatarsPopupView::addMenuItems() {
    PopUpLayer::addMenuItems();
    
}

void CzaAvatarsPopupView::addSprites() {
	PopUpLayer::addSprites();
   
   		//create group of sprites
	mCzaComeBackTextSprite = 
		CCSprite::create(D::id.cza_avatars_popup_cza_come_back_text.c_str());
	mCzaComeBackTextSprite->setPosition(GPARAMS().POPUP_CZA_AVATARS_CZA_COME_BACK_TEXT_SPRITE_POSITION);
	mBackgroundSprite->addChild(mCzaComeBackTextSprite, 0);

	mCzaHeaderSprite = 
		CCSprite::create(D::id.cza_avatars_popup_cza_header.c_str());
	mCzaHeaderSprite->setPosition(GPARAMS().POPUP_CZA_AVATARS_CZA_HEADER_SPRITE_POSITION);
	mBackgroundSprite->addChild(mCzaHeaderSprite, 0);

	mCzaLvProgressBgSprite = 
		CCSprite::create(D::id.cza_avatars_popup_cza_lv_progress_bg_cza_lv_progress_bg.c_str());
	mCzaLvProgressBgSprite->setPosition(GPARAMS().POPUP_CZA_AVATARS_CZA_LV_PROGRESS_BG_SPRITE_POSITION);
	mBackgroundSprite->addChild(mCzaLvProgressBgSprite, 0);

}

void CzaAvatarsPopupView::addLabels() {
	PopUpLayer::addLabels();	
   
}

void CzaAvatarsPopupView::addProgressBars() {
	PopUpLayer::addProgressBars();
	
		//comment to your source code, plz!
	CCSprite* czaLvProgressOverSprite = 
		CCSprite::create(D::id.cza_avatars_popup_cza_lv_progress_bg_progressbar_cza_lv_progress_over.c_str());
	mCzaLvProgressOverProgressbar = CCProgressTimer::create(czaLvProgressOverSprite);
	mCzaLvProgressOverProgressbar->setType(kCCProgressTimerTypeBar);
	mCzaLvProgressOverProgressbar->setAnchorPoint(CCPoint(0.0, 0.0));
	mCzaLvProgressOverProgressbar->setMidpoint(CCPoint(0.0, 0.0));
	mCzaLvProgressOverProgressbar->setBarChangeRate(CCPoint(1.0, 0.0));
	mCzaLvProgressOverProgressbar->setPercentage(30.0);
	mCzaLvProgressBgSprite->addChild(mCzaLvProgressOverProgressbar, 0);

}

void CzaAvatarsPopupView::addTables() {
	PopUpLayer::addTables();
	
		//create group of tables
	mContainerTable = TableView::create(
					GPARAMS().POPUP_CZA_AVATARS_CONTAINER_TABLE_SIZE,
					3,
					3,
					GPARAMS().POPUP_CZA_AVATARS_CONTAINER_CELL_POSITION,
					GPARAMS().POPUP_CZA_AVATARS_CONTAINER_CELL_SIZE,
					this);
	mContainerTable->setPosition(GPARAMS().POPUP_CZA_AVATARS_CONTAINER_TABLE_POSITION);
	mContainerTable->setTouchPriority(kCCMenuHandlerPriority - 101);
	mBackgroundSprite->addChild(mContainerTable);

}

void CzaAvatarsPopupView::addActions() {
    PopUpLayer::addActions();
    
    //{add_actions}
}

ITableCellView* CzaAvatarsPopupView::createTableViewCellAt(const int &idx) {
    ITableCellView *pRet = CzaAvatarsPopupCellView::create(idx);
    
    return pRet;
}

void CzaAvatarsPopupView::czaAvatarsMenuItemCallback(CCObject *pSender) {
    
    CCMenuItem* menuItem = static_cast<CCMenuItem*>(pSender);
        
    switch (menuItem->getTag()) {
        //{menuitem_cases}
    }
}
