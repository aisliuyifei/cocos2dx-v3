/**
* This file is auto generated by Twin Dragons Tools
* VipUpgradePopupView.cpp
* DragonVideoPoker
*
* Created by apple on Fri Jun 06 12:50:39 GMT+07:00 2014
*
**/
#include "VipUpgradePopupView.h"
#include "PopUpLayer.h"
#include "VisibleRect.h"
#include "GameParams.h"
#include "SoundManager.h"
#include "EziHelper.h"
#include "NativeHelper.h"


VipUpgradePopupView* VipUpgradePopupView::create(const string &pChipsString,
                                                 const string &pInappMultipleString,
                                                 long pVipStatus,
                                                 string pBackgroundImage,
                                                 string pExitNormalImage,
                                                 string pExitSelectedImage) {
    VipUpgradePopupView* pRet = new VipUpgradePopupView();
    pRet->autorelease();
    pRet->init(pChipsString,
               pInappMultipleString,
               pVipStatus,
               pBackgroundImage,
               pExitNormalImage,
               pExitSelectedImage);
    
    return pRet;
}
bool VipUpgradePopupView::init(const string &pChipsString,
                               const string &pInappMultipleString,
                               long pVipStatus,
                               string pBackgroundImage,
                               string pExitNormalImage,
                               string pExitSelectedImage) {
    this->mChipsString = pChipsString;
    this->mInappMultipleString = pInappMultipleString;
    this->mVipStatus = pVipStatus;
    
    PopUpLayer::init(pBackgroundImage,
                     pExitNormalImage,
                     pExitSelectedImage,
                     GPARAMS().POP_COMMON_EXIT_BUTTON_POSITION);
    setBackgroundPosition(VisibleRect::center());
    
    return true;
}

void VipUpgradePopupView::onActionShowFinished()
{
    SOUND().playSound(SOUND_GOT_VIP_UPGRADE);
    PopUpLayer::onActionShowFinished();
}

void VipUpgradePopupView::addMenuItems() {
    PopUpLayer::addMenuItems();
    
    
	mOkActiveSprite = CCSprite::create(D::id.vip_upgrade_popup_ok_ok_active.c_str());

	mOkNormalSprite = CCSprite::create(D::id.vip_upgrade_popup_ok_ok_normal.c_str());

	mOkMenuItem = CCMenuItemSprite::create(mOkNormalSprite,
						mOkActiveSprite,
						this,
						menu_selector(VipUpgradePopupView::vipUpgradeMenuItemCallback));
	mOkMenuItem->setPosition(GPARAMS().POP_VIP_UPGRADE_OK_MENUITEM_POSITION);
    mOkMenuItem->setTag(okMenuItemTag);
	mPopupMenu->addChild(mOkMenuItem);

	mShareActiveSprite = CCSprite::create(D::id.vip_upgrade_popup_share_share_active.c_str());

	mShareNormalSprite = CCSprite::create(D::id.vip_upgrade_popup_share_share_normal.c_str());

	mShareMenuItem = CCMenuItemSprite::create(mShareNormalSprite,
						mShareActiveSprite,
						this,
						menu_selector(VipUpgradePopupView::vipUpgradeMenuItemCallback));
	mShareMenuItem->setPosition(GPARAMS().POP_VIP_UPGRADE_SHARE_MENUITEM_POSITION);
    mShareMenuItem->setTag(shareMenuItemTag);
	mPopupMenu->addChild(mShareMenuItem);

    mPopupMenu->setTouchPriority(kCCMenuHandlerPriority - 110);
}

void VipUpgradePopupView::addSprites() {
	PopUpLayer::addSprites();
   
   	
	mMemberCardSprite = CCSprite::create(D::id.vip_upgrade_popup_member_cards[mVipStatus].c_str());
	mMemberCardSprite->setPosition(GPARAMS().POP_VIP_UPGRADE_MEMBER_CARD_SPRITE_POSITION);
	mBackgroundSprite->addChild(mMemberCardSprite);

	mRewardIconSprite = CCSprite::create(D::id.vip_upgrade_popup_reward_icon.c_str());
	mRewardIconSprite->setPosition(GPARAMS().POP_VIP_UPGRADE_REWARD_ICON_SPRITE_POSITION);
	mBackgroundSprite->addChild(mRewardIconSprite);

	mShineSprite = CCSprite::create(D::id.vip_upgrade_popup_shine.c_str());
	mShineSprite->setPosition(GPARAMS().POP_VIP_UPGRADE_SHINE_SPRITE_POSITION);
	mBackgroundSprite->addChild(mShineSprite, -1);

	mStar1Sprite = CCSprite::create(D::id.vip_upgrade_popup_star1.c_str());
	mStar1Sprite->setPosition(GPARAMS().POP_VIP_UPGRADE_STAR1_SPRITE_POSITION);
	mBackgroundSprite->addChild(mStar1Sprite, 100);

	mStar2Sprite = CCSprite::create(D::id.vip_upgrade_popup_star2.c_str());
	mStar2Sprite->setPosition(GPARAMS().POP_VIP_UPGRADE_STAR2_SPRITE_POSITION);
	mBackgroundSprite->addChild(mStar2Sprite, 100);

	mVipLevelRibbonSprite = CCSprite::create(D::id.vip_upgrade_popup_vip_level_ribbon.c_str());
	mVipLevelRibbonSprite->setPosition(GPARAMS().POP_VIP_UPGRADE_VIP_LEVEL_RIBBON_SPRITE_POSITION);
	mBackgroundSprite->addChild(mVipLevelRibbonSprite);

}
void VipUpgradePopupView::addLabels() {
	PopUpLayer::addLabels();	
   
	mChipsLabel = CCLabelTTF::create(mChipsString.c_str(), //"1,250,000 chips" example
			DEFAULT_FONT_NAME,
			GPARAMS().CMM_FONT_SIZE_2);
	mChipsLabel->setAnchorPoint(CCPoint(0, 0.5f));
	mChipsLabel->setPosition(GPARAMS().POP_VIP_UPGRADE_CHIPS_LABEL_POSITION);
	mBackgroundSprite->addChild(mChipsLabel);

	mInappLabel = CCLabelTTF::create(mInappMultipleString.c_str(), //"X1.25 inapp Purchase"
			DEFAULT_FONT_NAME,
			GPARAMS().CMM_FONT_SIZE_2);
	mInappLabel->setAnchorPoint(CCPoint(0, 0.5f));
	mInappLabel->setPosition(GPARAMS().POP_VIP_UPGRADE_INAPP_LABEL_POSITION);
	mBackgroundSprite->addChild(mInappLabel);

}
void VipUpgradePopupView::addProgressBars() {
	PopUpLayer::addProgressBars();
	
	//{add_progressbars}
}
void VipUpgradePopupView::addActions() {
    PopUpLayer::addActions();
    CCRotateBy* rotateBy = CCRotateBy::create(8.0f, 360);
    mShineSprite->runAction(CCRepeatForever::create(rotateBy));
    
    CCSequence *bigStar1Sequence = CCSequence::create(CCScaleTo::create(0.38f, 0.3f),
                                                     CCScaleTo::create(0.38f, 1.0f),
                                                      NULL);
    CCRotateBy *bigStar1RotateBy = CCRotateBy::create(1.5f, 360);
    mStar1Sprite->runAction(CCRepeatForever::create(CCSpawn::create(bigStar1RotateBy,
                                                                    bigStar1Sequence,
                                                                    NULL)));
    
    CCSequence *bigStar2Sequence = CCSequence::create(CCScaleTo::create(0.47f, 0.3f),
                                                      CCScaleTo::create(0.47f, 1.0f),
                                                      NULL);
    CCRotateBy *bigStar2RotateBy = CCRotateBy::create(1.5f, 360);
    mStar2Sprite->runAction(CCRepeatForever::create(CCSpawn::create(bigStar2RotateBy,
                                                                    bigStar2Sequence,
                                                                    NULL)));
}
//{extend_functions}
void VipUpgradePopupView::vipUpgradeMenuItemCallback(CCObject *pSender) {
    
    SOUND().playSound(SOUND_BUTTON_CLICK);
    
    CCMenuItem* menuItem = static_cast<CCMenuItem*>(pSender);
        
    switch (menuItem->getTag()) {
        case okMenuItemTag:
            hide();
            break;
        case shareMenuItemTag:
            EZI().postVipUpgradeMessageOnFacebookWall();
            hide();
            
            // track GA
            NATIVE().sendMainEvent(kGAMainEventShareVipUpgrade);
            break;
    }
}

void VipUpgradePopupView::registerWithTouchDispatcher() {
    CCDirector::sharedDirector()
    ->getTouchDispatcher()
    ->addTargetedDelegate(this,
                          kCCMenuHandlerPriority - 110,
                          true);
}

