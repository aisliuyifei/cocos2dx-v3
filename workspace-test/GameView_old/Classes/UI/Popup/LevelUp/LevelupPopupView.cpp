/**
* This file is auto generated by Twin Dragons Tools
* LevelupPopupView.cpp
* DragonVideoPoker
*
* Created by apple on Sat Jun 07 11:36:13 GMT+07:00 2014
*
**/
#include "LevelupPopupView.h"
#include "PopUpLayer.h"
#include "VisibleRect.h"
#include "GameParams.h"
#include "SoundManager.h"
#include "EziHelper.h"
#include "NativeHelper.h"


LevelupPopupView* LevelupPopupView::create(const string &pLevel,
                                           string pBackgroundImage,
                                           string pExitNormalImage,
                                           string pExitSelectedImage)
{
    LevelupPopupView* pRet = new LevelupPopupView();
    pRet->autorelease();
    pRet->init(pLevel, pBackgroundImage, pExitNormalImage, pExitSelectedImage);
    
    return pRet;
}

bool LevelupPopupView::init(const string &pLevel,
                            string pBackgroundImage,
                            string pExitNormalImage,
                            string pExitSelectedImage) {
    this->mLevelString = pLevel;
    PopUpLayer::init(pBackgroundImage,
                     pExitNormalImage,
                     pExitSelectedImage,
                     GPARAMS().POP_COMMON_EXIT_BUTTON_POSITION);
    setBackgroundPosition(VisibleRect::center());
    
    return true;
}

void LevelupPopupView::addMenuItems() {
    PopUpLayer::addMenuItems();
    
    
	mOkActiveSprite = CCSprite::create(D::id.levelup_popup_ok_ok_active.c_str());

	mOkNormalSprite = CCSprite::create(D::id.levelup_popup_ok_ok_normal.c_str());

	mOkMenuItem = CCMenuItemSprite::create(mOkNormalSprite,
						mOkActiveSprite,
						this,
						menu_selector(LevelupPopupView::levelupMenuItemCallback));
	mOkMenuItem->setPosition(GPARAMS().POP_LEVELUP_OK_MENUITEM_POSITION);
	mPopupMenu->addChild(mOkMenuItem, 100, okMenuItemTag);

	mShareActiveSprite = CCSprite::create(D::id.levelup_popup_share_share_active.c_str());

	mShareNormalSprite = CCSprite::create(D::id.levelup_popup_share_share_normal.c_str());

	mShareMenuItem = CCMenuItemSprite::create(mShareNormalSprite,
						mShareActiveSprite,
						this,
						menu_selector(LevelupPopupView::levelupMenuItemCallback));
	mShareMenuItem->setPosition(GPARAMS().POP_LEVELUP_SHARE_MENUITEM_POSITION);
	mPopupMenu->addChild(mShareMenuItem, 100, shareMenuItemTag);
}

void LevelupPopupView::addSprites() {
	PopUpLayer::addSprites();
   	
	mCircleContainer1Sprite = CCSprite::create(D::id.levelup_popup_circle_container_1.c_str());
	mCircleContainer1Sprite->setPosition(GPARAMS().POP_LEVELUP_CIRCLE_CONTAINER_1_SPRITE_POSITION);
	mBackgroundSprite->addChild(mCircleContainer1Sprite, 97);

	mCircleContainer2Sprite = CCSprite::create(D::id.levelup_popup_circle_container_2.c_str());
	mCircleContainer2Sprite->setPosition(GPARAMS().POP_LEVELUP_CIRCLE_CONTAINER_2_SPRITE_POSITION);
	mBackgroundSprite->addChild(mCircleContainer2Sprite, 98);

	mRibbonSprite = CCSprite::create(D::id.levelup_popup_ribbon.c_str());
	mRibbonSprite->setPosition(GPARAMS().POP_LEVELUP_RIBBON_SPRITE_POSITION);
	mBackgroundSprite->addChild(mRibbonSprite, 99);

	mShineCircleSprite = CCSprite::create(D::id.levelup_popup_shine_circle.c_str());
	mShineCircleSprite->setPosition(GPARAMS().POP_LEVELUP_SHINE_CIRCLE_SPRITE_POSITION);
	mBackgroundSprite->addChild(mShineCircleSprite, -99);

	mStar1Sprite = CCSprite::create(D::id.levelup_popup_star1.c_str());
	mStar1Sprite->setPosition(GPARAMS().POP_LEVELUP_STAR1_SPRITE_POSITION);
	mBackgroundSprite->addChild(mStar1Sprite, 101);

	mStar2Sprite = CCSprite::create(D::id.levelup_popup_star2.c_str());
	mStar2Sprite->setPosition(GPARAMS().POP_LEVELUP_STAR2_SPRITE_POSITION);
	mBackgroundSprite->addChild(mStar2Sprite, 101);

	mStar3Sprite = CCSprite::create(D::id.levelup_popup_star3.c_str());
	mStar3Sprite->setPosition(GPARAMS().POP_LEVELUP_STAR3_SPRITE_POSITION);
	mBackgroundSprite->addChild(mStar3Sprite, 101);

	mStarShineSprite = CCSprite::create(D::id.levelup_popup_star_shine.c_str());
	mStarShineSprite->setPosition(GPARAMS().POP_LEVELUP_STAR_SHINE_SPRITE_POSITION);
	mBackgroundSprite->addChild(mStarShineSprite, 96);
}

void LevelupPopupView::addLabels() {
	PopUpLayer::addLabels();	
   
	mCongratulationLabel = CCLabelTTF::create("Congratulations!",
			DEFAULT_FONT_NAME,
			GPARAMS().CMM_FONT_SIZE_5);
	mCongratulationLabel->setPosition(GPARAMS().POP_LEVELUP_CONGRATULATION_LABEL_POSITION);
	mBackgroundSprite->addChild(mCongratulationLabel, 100);

	mLevelLabel = CCLabelTTF::create(mLevelString.c_str(),
                                     DEFAULT_FONT_NAME,
                                     GPARAMS().CMM_FONT_SIZE_6);
	mLevelLabel->setPosition(GPARAMS().POP_LEVELUP_LEVEL_LABEL_POSITION);
	mBackgroundSprite->addChild(mLevelLabel, 100);
}

void LevelupPopupView::addProgressBars() {
	PopUpLayer::addProgressBars();
	
	//{add_progressbars}
}

void LevelupPopupView::addActions()
{
    CCSequence *sequence = CCSequence::create(CCHide::create(),
                                              CCDelayTime::create(0.15f),
                                              CCShow::create(),
                                              CCDelayTime::create(0.15f),
                                              NULL);
    CCRepeatForever *repeat = CCRepeatForever::create(sequence);
    mCircleContainer2Sprite->runAction(repeat);
    
    float durations[] = {0.43f, 0.51f, 0.32f};
    CCSprite* bigStars[3] = {
        mStar1Sprite, mStar2Sprite, mStar3Sprite
    };
    for(int i = 0 ; i < 3 ; i++) {
        CCSequence *bigStarSequence = CCSequence::create(CCScaleTo::create(durations[i], 0.3f),
                                                         CCScaleTo::create(durations[i], 1.0f),
                                                         NULL);
        CCRotateBy *bigStarRotateBy = CCRotateBy::create(1.5f, 360);
        bigStars[i]->runAction(CCRepeatForever::create(CCSpawn::create(bigStarRotateBy, bigStarSequence, NULL)));
    }
    
}

//{extend_functions}
void LevelupPopupView::levelupMenuItemCallback(CCObject *pSender)
{
    SOUND().playSound(SOUND_BUTTON_CLICK);

    CCMenuItem* menuItem = static_cast<CCMenuItem*>(pSender);
        
    switch (menuItem->getTag()) {
        case okMenuItemTag:
            hide();
            break;
        case shareMenuItemTag:
            EZI().postLevelUpMessageOnFacebookWall();
            hide();
            
            // track GA
            NATIVE().sendMainEvent(kGAMainEventShareLevelUp);
            break;
    }
}

void LevelupPopupView::onActionShowFinished()
{
    SOUND().playSound(SOUND_GOT_LEVEL_UP);
    
    PopUpLayer::onActionShowFinished();
}
