/**
 * This file is auto generated by Twin Dragons Tools
 * JackpotPopupView.cpp
 * DragonVideoPoker
 *
 * Created by apple on Wed Jun 04 10:01:17 GMT+07:00 2014
 *
 **/
#include "JackpotPopupView.h"
#include "PopUpLayer.h"
#include "VisibleRect.h"
#include "GameParams.h"
#include "SoundManager.h"
#include "EziHelper.h"
#include "NativeHelper.h"


JackpotPopupView* JackpotPopupView::create(string jackpotString,
                                           long long jackpotValue,
                                           string pBackgroundImage,
                                           string pExitNormalImage,
                                           string pExitSelectedImage)
{
    JackpotPopupView* pRet = new JackpotPopupView();
    pRet->autorelease();
    pRet->init(jackpotString, jackpotValue, pBackgroundImage, pExitNormalImage, pExitSelectedImage);
    
    return pRet;
}

bool JackpotPopupView::init(string jackpotString,
                            long long jackpotValue,
                            string pBackgroundImage,
                            string pExitNormalImage,
                            string pExitSelectedImage) {
    mJackpotString = string(jackpotString);
    mJackpotValue = jackpotValue;
    
    PopUpLayer::init(pBackgroundImage,
                     pExitNormalImage,
                     pExitSelectedImage,
                     GPARAMS().POP_COMMON_EXIT_BUTTON_POSITION);
    
    setBackgroundPosition(VisibleRect::center());
    
    return true;
}

void JackpotPopupView::onActionShowFinished()
{
    SOUND().playSound(SOUND_GOT_JACKPOT);
    PopUpLayer::onActionShowFinished();
}

void JackpotPopupView::addMenuItems() {
    PopUpLayer::addMenuItems();
    
    CCSprite* okActiveSprite = CCSprite::create(D::id.jackpot_popup_ok_ok_active.c_str());
	CCSprite* okNormalSprite = CCSprite::create(D::id.jackpot_popup_ok_ok_normal.c_str());
    
	mOkMenuItem = CCMenuItemSprite::create(okNormalSprite,
                                           okActiveSprite,
                                           this,
                                           menu_selector(JackpotPopupView::jackpotMenuItemCallback));
	mOkMenuItem->setPosition(GPARAMS().POP_JACKPOT_OK_MENUITEM_POSITION);
    mOkMenuItem->setTag(okMenuItemTag);
	mPopupMenu->addChild(mOkMenuItem);
    
	CCSprite* shareActiveSprite = CCSprite::create(D::id.jackpot_popup_share_share_active.c_str());
	CCSprite* shareNormalSprite = CCSprite::create(D::id.jackpot_popup_share_share_normal.c_str());
    
	mShareMenuItem = CCMenuItemSprite::create(shareNormalSprite,
                                              shareActiveSprite,
                                              this,
                                            menu_selector(JackpotPopupView::jackpotMenuItemCallback));
	mShareMenuItem->setPosition(GPARAMS().POP_JACKPOT_SHARE_MENUITEM_POSITION);
    mShareMenuItem->setTag(shareMenuItemTag);
	mPopupMenu->addChild(mShareMenuItem);
}
void JackpotPopupView::addSprites() {
	PopUpLayer::addSprites();
    
	mChipsSprite = CCSprite::create(D::id.jackpot_popup_chips.c_str());
	mChipsSprite->setPosition(GPARAMS().POP_JACKPOT_CHIPS_SPRITE_POSITION);
	mBackgroundSprite->addChild(mChipsSprite);
    
	mJackpotTextSprite = CCSprite::create(D::id.jackpot_popup_jackpot_text.c_str());
	mJackpotTextSprite->setPosition(GPARAMS().POP_JACKPOT_JACKPOT_TEXT_SPRITE_POSITION);
	mBackgroundSprite->addChild(mJackpotTextSprite);
    
	mRewardIconSprite = CCSprite::create(D::id.jackpot_popup_reward_icon.c_str());
	mRewardIconSprite->setPosition(GPARAMS().POP_JACKPOT_REWARD_ICON_SPRITE_POSITION);
	mBackgroundSprite->addChild(mRewardIconSprite);
    
	mShineCircleSprite = CCSprite::create(D::id.jackpot_popup_shine_circle.c_str());
	mShineCircleSprite->setPosition(GPARAMS().POP_JACKPOT_SHINE_CIRCLE_SPRITE_POSITION);
	mBackgroundSprite->addChild(mShineCircleSprite, -2);
    
	mStarShineSprite = CCSprite::create(D::id.jackpot_popup_star_shine.c_str());
	mStarShineSprite->setPosition(GPARAMS().POP_JACKPOT_STAR_SHINE_SPRITE_POSITION);
	mBackgroundSprite->addChild(mStarShineSprite, -1);
    
    this->addStarSprites();

}
void JackpotPopupView::addLabels()
{
	PopUpLayer::addLabels();
    mChipsLabel = CCLabelTTF::create(mJackpotString.c_str(),
                                     DEFAULT_FONT_NAME,
                                     GPARAMS().CMM_FONT_SIZE_5);
    mChipsLabel->setAnchorPoint(CCPoint(0, 0));
    mChipsLabel->setPosition(GPARAMS().POP_JACKPOT_CHIPS_LABEL_POSITION);
    mBackgroundSprite->addChild(mChipsLabel);
}
void JackpotPopupView::addProgressBars() {
	PopUpLayer::addProgressBars();
	
	//{add_progressbars}
}


void JackpotPopupView::addActions() {
    CCRotateBy* rotateBy = CCRotateBy::create(8.0f, 360);
    mShineCircleSprite->runAction(CCRepeatForever::create(rotateBy));
}

void JackpotPopupView::addStarSprites() {
    float durations[] = {0.43f, 0.51f, 0.32f, 0.39f};
    for(int i = 0 ; i < 4 ; i++) {
        CCSprite *bigStar = CCSprite::create(D::id.jackpot_popup_big_star.c_str());
        bigStar->setPosition(GPARAMS().POP_JACKPOT_STARS_POSITIONS[i]);
        mBackgroundSprite->addChild(bigStar, 100);
        CCSequence *bigStarSequence = CCSequence::create(CCScaleTo::create(durations[i], 0.3f),
                                                         CCScaleTo::create(durations[i], 1.0f),
                                                         NULL);
        CCRotateBy *bigStarRotateBy = CCRotateBy::create(1.5f, 360);
        bigStar->runAction(CCRepeatForever::create(CCSpawn::create(bigStarRotateBy, bigStarSequence, NULL)));
    }
}

void JackpotPopupView::jackpotMenuItemCallback(CCObject *pSender)
{
    SOUND().playSound(SOUND_BUTTON_CLICK);
    
    CCMenuItem* menuItem = static_cast<CCMenuItem*>(pSender);
    
    switch (menuItem->getTag()) {
        case okMenuItemTag:
            hide();
            break;
        case shareMenuItemTag:
            EZI().postJackpotMessageOnFacebookWall(mJackpotValue);
            hide();
            
            // track GA
            NATIVE().sendMainEvent(kGAMainEventShareJackpot);
            break;
    }
}

